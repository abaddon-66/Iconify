name: Build Debug APK

on:
  push:
    branches: [ "beta" ]
  workflow_dispatch:

jobs:
  synchronize-with-crowdin:
    name: Upload strings to Crowdin
    if: github.repository_owner == 'Mahmud0808'
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Upload Strings
        uses: crowdin/github-action@v2
        with:
          upload_translations: false
          upload_sources: true
          download_translations: false
          localization_branch_name: beta-localization
          create_pull_request: false
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          CROWDIN_PROJECT_ID: ${{ secrets.CROWDIN_PROJECT_ID }}
          CROWDIN_PERSONAL_TOKEN: ${{ secrets.CROWDIN_PERSONAL_TOKEN }}

  build:
    name: Build Debug APK
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: set up JDK 18
        uses: actions/setup-java@v4
        with:
          java-version: '18'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Get application version name
        run: echo "VERSION_NAME=$(${{github.workspace}}/gradlew -q printVersionName)" >> $GITHUB_ENV

      - name: Bump application version code
        uses: chkfung/android-version-actions@v1.2.3
        with:
          gradlePath: app/build.gradle.kts
          versionCode: ${{github.run_number}}
          versionName: "${{ env.VERSION_NAME }} Dev (#${{github.run_number}})"

      - name: Write sign info
        if: github.repository == 'Mahmud0808/Iconify'
        run: |
          if [ ! -z "${{ secrets.KEYSTORE }}" ]; then
            echo storePassword='${{ secrets.KEYSTORE_PASSWORD }}' >> keystore.properties
            echo keyAlias='${{ secrets.KEY_ALIAS }}' >> keystore.properties
            echo keyPassword='${{ secrets.KEY_PASSWORD }}' >> keystore.properties
            echo storeFile='${{ github.workspace }}/key.jks' >> keystore.properties
            echo ${{ secrets.KEYSTORE }} | base64 --decode > ${{ github.workspace }}/key.jks
          fi

      - name: Build with Gradle
        run: |
          ./gradlew assembleFossDebug
          ./gradlew assembleStandardDebug

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: "Iconify v${{ env.VERSION_NAME }} Dev (#${{github.run_number}})"
          path: |
            app/build/outputs/apk/foss/debug/*.apk
            app/build/outputs/apk/standard/debug/*.apk
          if-no-files-found: error

      - name: Get Commit Messages
        id: get_commit_message
        run: |
          COMMIT_MESSAGE_HEADER=""
          COMMIT_INDEX=0
          while [[ "$COMMIT_MESSAGE_HEADER" == "" || "$COMMIT_MESSAGE_HEADER" =~ ^Merge\ remote-tracking\ branch ]]; do
            COMMIT_MESSAGE_HEADER=$(git log -1 --skip=$COMMIT_INDEX --pretty=%B | head -n 1)
            echo "Checking commit at index $COMMIT_INDEX: $COMMIT_MESSAGE_HEADER"
            COMMIT_INDEX=$((COMMIT_INDEX + 1))
          done
          if [[ -z "$COMMIT_MESSAGE_HEADER" ]]; then
            echo "No valid changelog found!"
            COMMIT_MESSAGE_HEADER="No valid changelog found!"
          fi
          ESCAPED_MESSAGE=$(echo "$COMMIT_MESSAGE_HEADER" | jq -Rsa . | sed 's/^"\(.*\)"$/\1/')
          echo "COMMIT_MESSAGE_HEADER=${ESCAPED_MESSAGE}" >> $GITHUB_ENV

      - name: Clean Previous Release Folder
        run: rm -rf releases && mkdir -p releases

      - name: Zip Artifact for Deployment
        run: |
          cd app/build/outputs/apk/standard/debug/
          zip "../../../../../../releases/Iconify v${{ env.VERSION_NAME }} Dev (#${{github.run_number}}).zip" *.apk -r

      - name: Telegram File Attachment
        if: github.repository == 'Mahmud0808/Iconify'
        run: |
          set -e
          curl -v "https://api.telegram.org/bot${{ secrets.TG_BOT_TOKEN }}/sendMediaGroup" \
            -F chat_id=${{ secrets.TG_CHAT_ID }} \
            -F message_thread_id=${{ secrets.TG_CHAT_THREAD_ID }} \
            -F media='[
              {"type":"document", "media":"attach://Standard", "caption":"CHANGELOG: ${{ env.COMMIT_MESSAGE_HEADER }}"}
            ]' \
            -F Standard="@releases/Iconify v${{ env.VERSION_NAME }} Dev (#${{github.run_number}}).zip" \
            -F disable_notification=true || exit 1
